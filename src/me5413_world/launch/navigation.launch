<launch>

  <!-- 使用仿真时间 -->
  <param name="use_sim_time" value="true"/>

  <arg name="odom_topic" default="/jackal_velocity_controller/odom"/>
    <remap from="/odom" to="$(arg odom_topic)"/>
    <node pkg="twist_mux" type="twist_mux" name="twist_mux" output="screen">
    <rosparam command="load" file="$(find jackal_control)/config/twist_mux.yaml" />
    <remap from="/cmd_vel_out" to="/jackal_velocity_controller/cmd_vel"/>
  </node>

  <!-- Connect the robot to a keyboard teleop controller -->
  <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" respawn="true"/>

  <!-- Map server -->
  <arg name="map_file" default="$(find me5413_world)/maps/nav.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- AMCL Localizer -->
  <include file="$(find jackal_navigation)/launch/include/amcl.launch" />

  <!-- Move Base -->
  <include file="$(find jackal_navigation)/launch/include/move_base.launch" />

  <!-- Laser merger -->
  <include file="$(find ira_laser_tools)/launch/laserscan_multi_merger.launch" />

  <!-- IMU filter -->
  <include file="$(find jackal_navigation)/launch/imu_filter.launch" />

  <!-- EKF localization -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" output="screen">
    <param name="imu0" value="/imu/data/bias_filtered"/>
  </node>

  <!-- RViz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find me5413_world)/rviz/navigation.rviz" output="log" respawn="true"/>


  <!-- 自动导航+旋转补全节点 -->
  <!-- <node pkg="me5413_world" type="jackal_auto_nav.py" name="jackal_auto_rot_nav" output="screen">
    <param name="pause_duration" value="1.0" />
  </node> -->

  <!-- 初始化 AMCL 的初始位姿 -->
  <!-- <node pkg="rostopic" type="rostopic" name="amcl_init_pose"
        args='pub -1 /initialpose geometry_msgs/PoseWithCovarianceStamped -- "{ header: {frame_id: \"map\"}, pose: { pose: { position: {x: 0.0, y: 0.0, z: 0.0}, orientation: {z: 0.0, w: 1.0} } } }"' /> -->


</launch>

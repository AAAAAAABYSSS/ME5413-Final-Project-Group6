<launch>

  <!-- Connect the robot to a keyboard teleop controller -->
  <!-- <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" respawn="true"/> -->

  <!-- Run the map server -->
  <arg name="map_file" default="$(find me5413_world)/maps/nav_carto_3d_cleaned.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  
  <!-- Launch the AMCL Localizer -->
  <include file="$(find jackal_navigation)/launch/include/amcl.launch">
  </include>

  <!-- global planner name-->
  <arg name="global_planner" default="dstar" />
  <!-- local planner name -->
  <arg name="local_planner" default="pid" />


  <!-- Launch Move Base -->

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" >

    <rosparam file="$(find jackal_navigation)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find jackal_navigation)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
    
    <rosparam file="$(find jackal_navigation)/params/map_nav_params/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find jackal_navigation)/params/map_nav_params/global_costmap_params.yaml" command="load" />
    
    
    
    <rosparam file="$(find jackal_navigation)/params/move_base_params.yaml" command="load" />
    
    <!-- One additional yml modification -->
    <rosparam file="$(find jackal_navigation)/params/addition_params/move_base.yaml" command="load" />
    <!-- <rosparam file="$(find jackal_navigation)/params/addition_params/global_planner.yaml" command="load" /> -->

    <!-- global planner plugin -->
    
    <param name="base_global_planner" type="string" value="path_planner/PathPlanner" />
    <param name="PathPlanner/planner_name" value="$(arg global_planner)" />
    
    <!-- graph search -->
    <rosparam file="$(find jackal_navigation)/config/planner/common_planner_params.yaml" command="load" />
    <rosparam file="$(find jackal_navigation)/config/planner/graph_planner_params.yaml" command="load"
        if="$(eval arg('global_planner')=='astar'
                or arg('global_planner')=='jps' 
                or arg('global_planner')=='bi_jps' 
                or arg('global_planner')=='gbfs'
                or arg('global_planner')=='dijkstra'
                or arg('global_planner')=='dstar'
                or arg('global_planner')=='lpa_star'
                or arg('global_planner')=='voronoi'
                or arg('global_planner')=='dstar_lite'
                or arg('global_planner')=='theta_star'
                or arg('global_planner')=='lazy_theta_star'
                or arg('global_planner')=='s_theta_star'
                or arg('global_planner')=='hybrid_astar'
                or arg('global_planner')=='lazy'
            )" />
    
    
    
    <!-- local planner plugin -->
    <param name="base_local_planner" value="dwa_controller/DWAController" if="$(eval arg('local_planner')=='dwa')" />
    <rosparam file="$(find jackal_navigation)/config/controller/dwa_controller_params.yaml" command="load" if="$(eval arg('local_planner')=='dwa')" />

    <param name="base_local_planner" value="pid_controller/PIDController" if="$(eval arg('local_planner')=='pid')" />
    <rosparam file="$(find jackal_navigation)/config/controller/pid_controller_params1.yaml" command="load" if="$(eval arg('local_planner')=='pid')" />

    <param name="base_local_planner" value="apf_controller/APFController" if="$(eval arg('local_planner')=='apf')" />
    <rosparam file="$(find jackal_navigation)/config/controller/apf_controller_params.yaml" command="load" if="$(eval arg('local_planner')=='apf')" />

    <param name="base_local_planner" value="rpp_controller/RPPController" if="$(eval arg('local_planner')=='rpp')" />
    <rosparam file="$(find jackal_navigation)/config/controller/rpp_controller_params.yaml" command="load" if="$(eval arg('local_planner')=='rpp')" />

    <param name="base_local_planner" value="lqr_controller/LQRController" if="$(eval arg('local_planner')=='lqr')" />
    <rosparam file="$(find jackal_navigation)/config/controller/lqr_controller_params.yaml" command="load" if="$(eval arg('local_planner')=='lqr')" />

    <param name="base_local_planner" value="mpc_controller/MPCController" if="$(eval arg('local_planner')=='mpc')" />
    <rosparam file="$(find jackal_navigation)/config/controller/mpc_controller_params.yaml" command="load" if="$(eval arg('local_planner')=='mpc')" />

    <param name="base_local_planner" value="static_controller/StaticController" if="$(eval arg('local_planner')=='static')" />
    
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" if="$(eval arg('local_planner')=='standard')"/>
    <rosparam file="$(find jackal_navigation)/params/base_local_planner_params.yaml" command="load" if="$(eval arg('local_planner')=='standard')"/> 

    <remap from="odom" to="odometry/filtered" />
  </node>
  
  <!-- Launch laser merger -->
  <include file="$(find ira_laser_tools)/launch/laserscan_multi_merger.launch" />

  <!-- Launch IMU filter -->
  <include file="$(find jackal_navigation)/launch/imu_filter.launch" />

  <!-- ekf localization
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" output="screen">
        <param name="imu0" value="/imu/data/bias_filtered"/>
    </node> -->

  <!-- Launch Rviz with our settings -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find me5413_world)/rviz/navigation.rviz" output="log" respawn="true"/>
  <!-- <node ns="me5413_world" pkg="me5413_world" type="goal_publisher_node" name="goal_publisher_node" output="screen" /> -->

</launch>